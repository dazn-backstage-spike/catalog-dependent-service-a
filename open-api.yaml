openapi: 3.0.2
servers:
  - url: "http://localhost:9090/v0"
    description: Local Environment
  - url: "https://deployments-api.plat.dazn-dev.com/v0"
    description: Development Environment
    variables: {}
  - url: "https://deployments-api.plat.dazn-test.com/v0"
    description: Test Environment
  - url: "https://deployments-api.plat.dazn-stage.com/v0"
    description: Stage Environment
  - url: "https://deployments-api.daznplatform.io/v0"
    description: Production Environment
info:
  description: DX Deployment Dashboard API
  version: 1.16.0
  title: Deployment Dashboard API
  contact:
    email: dx@dazn.com
    name: DX
tags: []
paths:
  /artifacts:
    post:
      description: Create a new artifact
      responses:
        "201":
          description: On success returns single created artifact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostArtifactResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
      requestBody:
        description: The artifact payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostArtifactRequest"
  /releases:
    get:
      description: Gets all of the releases for given filters
      responses:
        "200":
          description: A list of releases
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetReleasesResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
      parameters:
        - $ref: "#/components/parameters/filter-multiple-chapter"
        - $ref: "#/components/parameters/filter-country"
        - $ref: "#/components/parameters/filter-multiple-domain"
        - $ref: "#/components/parameters/filter-multiple-environment"
        - $ref: "#/components/parameters/filter-multiple-target"
        - $ref: "#/components/parameters/filter-multiple-version"
        - $ref: "#/components/parameters/filter-is_deployable"
  /deployments:
    post:
      description: Creates a new deployment record
      responses:
        "201":
          description: The deployment is recorded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostDeploymentResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
      requestBody:
        description: The artifact payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostDeploymentRequest"
    get:
      description: Gets all of the deployments for given filters. Only returns 100 results until pagination is implemented
      responses:
        "200":
          description: A list of deployment records
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JoinedDeploymentsResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
      parameters:
        - $ref: "#/components/parameters/filter-chapter"
        - $ref: "#/components/parameters/filter-domain"
        - $ref: "#/components/parameters/filter-target"
        - $ref: "#/components/parameters/filter-countries"
        - $ref: "#/components/parameters/filter-environment"
        - $ref: "#/components/parameters/filter-version"
  # Might change based on refinement in https://livesport.atlassian.net/browse/PLAT-2326
  /rollbacks/{rollbackNumber}:
    get:
      description: Gets all of the deployments for given rollback number. Only returns 100 results until pagination is implemented
      responses:
        "200":
          description: A list of deployment records
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RollbackResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
      parameters:
        - $ref: "#/components/parameters/required-filter-chapter"
        - $ref: "#/components/parameters/required-filter-target"
        - $ref: "#/components/parameters/filter-countries"
        - $ref: "#/components/parameters/required-filter-environment"
        - $ref: "#/components/parameters/required-filter-domain"
        - $ref: "#/components/parameters/in-path-rollbackNumber"
  /feedback:
    get:
      description: Gets all feedback
      responses:
        "200":
          description: A list of feedback
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
    post:
      description: Adds a new feedback
      requestBody:
        description: The feedback payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackRequest"
      responses:
        "201":
          description: The feedback is recorded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"

  /package/deployments:
    post:
      tags:
        - package
      description: Create a DAZN package deployment. This updates the version.json file hosted on the [Package Loader Infrasturcture](https://github.com/getndazn/package-loader-infrastructure).
      responses:
        "201":
          description: The deployment is recorded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostDeploymentResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
      requestBody:
        description: The artifact payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostPackageDeploymentRequest"

  /dazn1/deployments:
    get:
      tags:
        - dazn1
      description: Gets DAZN 1.0 deployment information for specific environment
      parameters:
        - $ref: "#/components/parameters/required-filter-environment-dazn-1"
      responses:
        "200":
          description: A list of deployments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1DeploymentsResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
  /dazn1/packages:
    get:
      tags:
        - dazn1
      description: Gets info about all DAZN 1.0 packages plans for specific target and environment
      parameters:
        - $ref: "#/components/parameters/required-filter-environment-dazn-1"
        - $ref: "#/components/parameters/required-filter-package-target-dazn-1"
      responses:
        "200":
          description: A list of packages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1PackagesResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
  /dazn1/packages/{packageId}/url:
    get:
      tags:
        - dazn1
      description: Gets temporary URL to download DAZN 1.0 package
      parameters:
        - $ref: "#/components/parameters/in-path-dazn1PackageId"
      responses:
        "200":
          description: Temporary download url
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1PackageUrlResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
  /dazn1/plans:
    get:
      tags:
        - dazn1
      description: Gets all DAZN 1.0 deployment plans for specific environment
      parameters:
        - $ref: "#/components/parameters/required-filter-environment-dazn-1"
      responses:
        "200":
          description: A list of plans
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1PlansResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
    post:
      tags:
        - dazn1
      description: Adds a new DAZN 1.0 deployment plan
      requestBody:
        description: The plan payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dazn1PlanRequest"
      responses:
        "201":
          description: Created plan details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1PlanResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
  /dazn1/plans/{planId}:
    get:
      tags:
        - dazn1
      description: Gets DAZN 1.0 deployment plan by its identifier
      parameters:
        - $ref: "#/components/parameters/in-path-dazn1PlanId"
      responses:
        "200":
          description: Single plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1PlanResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
  /dazn1/plans/{planId}/logs:
    get:
      tags:
        - dazn1
      description: Gets logs for DAZN 1.0 deployment plan
      parameters:
        - $ref: "#/components/parameters/in-path-dazn1PlanId"
        - $ref: "#/components/parameters/filter-dazn1-logs-since"
      responses:
        "200":
          description: Single plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1PlanLogsResponse"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
  /dazn1/plans/{planId}/details:
    get:
      tags:
        - dazn1
      description: Gets DAZN 1.0 deployment plan details
      parameters:
        - $ref: "#/components/parameters/in-path-dazn1PlanId"
      responses:
        "200":
          description: Plan details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1PlanDetailsResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
  /dazn1/plans/{planId}/rollback:
    get:
      tags:
        - dazn1
      description: Gets DAZN 1.0 rollback for given planId
      parameters:
        - $ref: "#/components/parameters/in-path-dazn1PlanId"
      responses:
        "200":
          description: Plan rollback
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dazn1PlanRollbackResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "4XX":
          $ref: "#/components/responses/UnprocessableEntityError"
        "5XX":
          $ref: "#/components/responses/UnknownError"
security:
  - bearerAuth: []
components:
  responses:
    UnknownError:
      description: An unknown error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/JSONAPIMetaErrorResponse"
    NotFoundError:
      description: Item not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/JSONAPIMetaErrorResponse"
    UnprocessableEntityError:
      description: Unprocessable entity in the request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/JSONAPIMetaErrorResponse"
  parameters:
    filter-version: &filter-version
      name: "filter[version]"
      in: query
      allowReserved: true
      required: false
      schema:
        $ref: "#/components/schemas/versionParameter"
      examples:
        version:
          summary: Version
          value: 2.618.0
      allowEmptyValue: false
    filter-domain: &filter-domain
      name: "filter[domain]"
      in: query
      allowReserved: true
      required: false
      schema:
        $ref: "#/components/schemas/domainIdParameter"
      examples:
        betaDomain:
          summary: Beta
          value: beta
      allowEmptyValue: false
    filter-chapter: &filter-chapter
      name: "filter[chapter]"
      in: query
      allowReserved: true
      required: false
      schema:
        $ref: "#/components/schemas/chapterIdParameter"
      examples:
        authChapter:
          summary: Auth Chapter
          value: auth
      allowEmptyValue: false
    filter-target: &filter-target
      name: "filter[target]"
      in: query
      allowReserved: true
      required: false
      schema:
        $ref: "#/components/schemas/targetIdParameter"
      examples:
        androidTv:
          summary: Android TV target
          value: androidtv
      allowEmptyValue: false
    filter-countries:
      name: "filter[countries]"
      description: comma separated string of country codes
      in: query
      allowReserved: true
      required: false
      schema:
        $ref: "#/components/schemas/countryIdParameter"
      examples:
        brazil:
          summary: Brazil
          value: br
        austria:
          summary: Austria
          value: at
        brazilAndAustria:
          summary: Brazil and Austria
          value: "br,at"
      allowEmptyValue: false
    filter-environment: &filter-environment
      name: "filter[environment]"
      in: query
      allowReserved: true
      required: false
      schema:
        $ref: "#/components/schemas/environmentIdParameter"
      examples:
        production:
          summary: Production
          value: production
      allowEmptyValue: false
    filter-multiple-chapter: &filter-multiple-chapter
      name: "filter[chapter]"
      in: query
      allowReserved: true
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/chapterIdParameter"
      explode: true
      examples:
        single:
          summary: single chapter
          value: [auth]
        multiple:
          summary: multiple chapters
          value: [auth, catalog]
      allowEmptyValue: false
    filter-country:
      name: "filter[country]"
      in: query
      allowReserved: true
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/countryIdParameter"
      explode: true
      examples:
        single:
          summary: single country
          value: [br]
        multiple:
          summary: multiple countries
          value: [br, at]
      allowEmptyValue: false
    filter-multiple-domain:
      name: "filter[domain]"
      in: query
      allowReserved: true
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/domainIdParameter"
      explode: true
      examples:
        single:
          summary: single domain
          value: [beta]
        multiple:
          summary: multiple domains
          value: [beta, live]
      allowEmptyValue: false
    filter-multiple-environment:
      name: "filter[environment]"
      in: query
      allowReserved: true
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/environmentIdParameter"
      explode: true
      examples:
        single:
          summary: single enviornment
          value: [production]
        multiple:
          summary: multiple enviornment
          value: [production, testing]
      allowEmptyValue: false
    filter-multiple-target:
      name: "filter[target]"
      in: query
      allowReserved: true
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/targetIdParameter"
      explode: true
      examples:
        single:
          summary: single target
          value: [androidtv]
        multiple:
          summary: multiple targets
          value: [androidtv, web]
      allowEmptyValue: false
    filter-multiple-version:
      name: "filter[version]"
      in: query
      allowReserved: true
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/versionParameter"
      explode: true
      examples:
        single:
          summary: single version
          value: [1.2.3]
        multiple:
          summary: multiple version
          value: [1.2.3, 1.2.4]
      allowEmptyValue: false
    filter-is_deployable: &filter-is_deployable
      name: "filter[is_deployable]"
      in: query
      allowReserved: true
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/isDeployableParameter"
      explode: true
      examples:
        single:
          summary: only deployable builds
          value: ["true"]
        multiple:
          summary: both deployable and edge builds
          value: ["true", "false"]
      allowEmptyValue: false
    filter-dazn1-package-target: &filter-dazn1-package-target
      name: "filter[target]"
      description: target identifier
      in: query
      allowReserved: true
      required: false
      schema:
        $ref: "#/components/schemas/packageTargetIdDazn1Parameter"
      examples:
        tizen:
          summary: Samsung Tizen
          value: tizen
        webos:
          summary: LG webOS
          value: webos
      allowEmptyValue: false
    filter-dazn1-logs-since: &filter-dazn1-logs-since
      name: "filter[since]"
      description: timestamp in ms - get all logs with "timestampMs" field greater than given value
      in: query
      required: false
      allowReserved: true
      schema:
        type: number
        default: 0

    required-filter-chapter:
      <<: *filter-chapter
      required: true
    required-filter-domain:
      <<: *filter-domain
      required: true
    required-filter-target:
      <<: *filter-target
      required: true
    required-filter-environment:
      <<: *filter-environment
      required: true
    required-filter-environment-dazn-1:
      <<: *filter-environment
      required: true
      schema:
        $ref: "#/components/schemas/environmentIdDazn1Parameter"
    required-filter-package-target-dazn-1:
      <<: *filter-dazn1-package-target
      required: true
    in-path-rollbackNumber:
      name: rollbackNumber
      description: |
        0 is latest deployment, 1= rollback, 2= 2 rollbacks, 3= 3 rollbacks...
        THIS CAN ONLY be provided when target, chapter and environment is provided
      in: path
      required: true
      schema:
        type: integer
      examples:
        latest:
          summary: latest deployment
          value: 0
        rollback:
          summary: rollback deployment
          value: 1
        nthRollback:
          summary: 5th rollback deployment
          value: 5
      allowEmptyValue: false
    in-path-dazn1PackageId:
      name: packageId
      description: DAZN 1.0 package identifier
      in: path
      required: true
      schema:
        type: string
      example: "61abacfc-8a39-4f88-bca3-041a9aa9e7d6"
      allowEmptyValue: false
    in-path-dazn1PlanId:
      name: planId
      description: DAZN 1.0 deployment plan identifier
      in: path
      required: true
      schema:
        type: string
      example: "61abacfc-8a39-4f88-bca3-041a9aa9e7d6"
      allowEmptyValue: false
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  links: {}
  callbacks: {}
  schemas:
    JSONAPIMetaErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorItem"
    ErrorItem:
      type: object
      properties:
        code:
          type: string
        title:
          type: string
        status:
          type: string
        detail:
          type: string
      required:
        - title
        - status
    JSONAPIMetaObject:
      type: object
      properties:
        count:
          type: integer
          example: 1
    JSONAPIResource:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        attributes:
          type: object

    # Parameters
    countryIdParameter:
      type: string
      enum: [at, br, ca, ch, de, es, it, jp, moon, us, ALL]
    targetIdParameter:
      type: string
      enum:
        [
          androidtv,
          firetv,
          magentatv,
          ps4,
          skyq,
          tizen,
          web,
          webos,
          xboxone,
          xfinity,
        ]
    chapterIdParameter:
      type: string
      enum:
        [
          account,
          auth,
          bootstrap,
          catalog,
          contactus,
          error,
          help,
          landingpage,
          openbrowse,
        ]
    environmentIdParameter:
      type: string
      enum: [testing, staging, production, ALL]
      example: "ALL"
    regionIdDazn1Parameter:
      type: string
      enum: [at, br, ca, ch, de, es, it, jp, moon, us]
      example: at
    deployableTargetIdDazn1Parameter:
      type: string
      enum:
        [
          funai,
          hisense,
          netcast,
          orsay,
          panasonic,
          ps3,
          ps4,
          sagemcom,
          smartcast,
          sonyceb,
          tizen,
          toshiba,
          webos,
          xboxone,
          xfinity,
        ]
      example: tizen
    packageTargetIdDazn1Parameter:
      type: string
      enum: [androidtv, firetv, netcast, orsay, ps3, ps4, tizen, webos, xboxone]
    environmentIdDazn1Parameter:
      type: string
      enum: [test, staging, production, development]
      example: "development"
    planStatusIdDazn1Parameter:
      type: string
      enum:
        [
          new,
          conflict,
          validation_in_progress,
          validation_error,
          deploy_in_progress,
          done,
          unknown_error,
        ]
      example: "new"
    planIdDazn1Parameter:
      type: string
      example: "61abacfc-8a39-4f88-bca3-041a9aa9e7d6"
      description: deployment plan identifier
    domainIdParameter:
      type: string
      enum: [live, beta, indaznlab, ALL]
      example: "indaznlab"
    originatingDomainParameter:
      type: string
      enum:
        [
          "drone.daznplatform.com",
          "deployments.plat.dazn-dev.com",
          "deployments.plat.dazn-test.com",
          "deployments.plat.dazn-stage.com",
          "deployments.daznplatform.io",
          "console.aws.amazon.com",
        ]
    authorParameter:
      type: string
      example: "John Doe"
    authorEmail:
      type: string
      example: "john.doe@example.com"
    versionParameter:
      type: string
      example: "1.2.3"
      description: This is semantic version string. Not the build details prefixed value
    isDeployableParameter:
      type: string
      enum: [true, false]
      example: "true"
    createdAtParameter:
      type: string
      format: date-time # ===> "2019-12-09T14:22:39.898Z"

    # Artifact
    ArtifactItem:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/versionParameter"
        ci_build_number:
          type: integer
          example: 97
        country_id:
          $ref: "#/components/schemas/countryIdParameter"
        target_id:
          $ref: "#/components/schemas/targetIdParameter"
        chapter_id:
          $ref: "#/components/schemas/chapterIdParameter"
        artifact_location:
          type: string
          example: "/test/androidtv/at/account/1.2.3.97"
        environment_id:
          $ref: "#/components/schemas/environmentIdParameter"
        domain_id:
          $ref: "#/components/schemas/domainIdParameter"
        internal_dependencies:
          type: array
          items:
            type: array
            items:
              type: string
            minItems: 2
            maxItems: 2
          # Not entirely sure about the format of internal dependencies response
          example: [["@dazn/myaccount-androidtv-chapter", "v0.370.0"]]
        is_deployable:
          type: boolean
    PostArtifactRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              $ref: "#/components/schemas/ArtifactItem"
    PostArtifactResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  type:
                    enum: ["artifact"]
                  id:
                    example: 71
                  attributes:
                    allOf:
                      - $ref: "#/components/schemas/ArtifactItem"
                      - type: object
                        properties:
                          created_at:
                            $ref: "#/components/schemas/createdAtParameter"
                          id:
                            type: number
                            example: 71

    # Release
    ReleaseItem:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/versionParameter"
    GetReleasesResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  id:
                    example: "1.2.3"
                  type:
                    enum: ["release"]
                  attributes:
                    $ref: "#/components/schemas/ReleaseItem"
        relationships:
          type: object
          properties:
            artifacts:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 71
                      type:
                        type: string
                        enum: ["artifact"]
                meta:
                  $ref: "#/components/schemas/JSONAPIMetaObject"
        included:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/ArtifactItem"
              - type: object
                properties:
                  created_at:
                    $ref: "#/components/schemas/createdAtParameter"
                  id:
                    type: number
                    example: 71

    # Deployment
    DeploymentItem:
      type: object
      properties:
        author:
          $ref: "#/components/schemas/authorParameter"
        artifact_id:
          type: number
          example: 71
        environment_id:
          allOf:
            - $ref: "#/components/schemas/environmentIdParameter"
            - example: "production"
        domain_id:
          allOf:
            - $ref: "#/components/schemas/domainIdParameter"
            - example: "live"
        originating_domain:
          $ref: "#/components/schemas/originatingDomainParameter"
        author_email:
          $ref: "#/components/schemas/authorEmail"
      required:
        - author
        - artifact_id
        - environment_id
        - domain_id
        - originating_domain

    PostDeploymentRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              $ref: "#/components/schemas/DeploymentItem"
    PostDeploymentResponse:
      type: object
      properties:
        message:
          type: string
          enum: ["Successfully deployed"]
    JoinedDeploymentsResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  type:
                    enum: ["deployment"]
                  id:
                    example: 12
                  attributes:
                    allOf:
                      - $ref: "#/components/schemas/ArtifactItem"
                      - $ref: "#/components/schemas/DeploymentItem"
                      - type: object
                        properties:
                          created_at:
                            $ref: "#/components/schemas/createdAtParameter"
                          id:
                            type: number
                            example: 12
    # Rollback
    RollbackResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  type:
                    enum: ["deployment"]
                  id:
                    example: 12
                  attributes:
                    allOf:
                      - $ref: "#/components/schemas/ArtifactItem"
                      - $ref: "#/components/schemas/DeploymentItem"
                      - type: object
                        properties:
                          rollback_number:
                            type: number
                          id:
                            type: number
                            example: 12

    # Feedback
    FeedbackItem:
      type: object
      properties:
        rating:
          type: number
        message:
          type: string
        author:
          $ref: "#/components/schemas/authorParameter"
        service_name:
          type: string
    FeedbackRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
            attributes:
              allOf:
                - $ref: "#/components/schemas/FeedbackItem"
                - type: object
                  required:
                    - rating
    FeedbackResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  type:
                    enum: ["feedback"]
                  id:
                    example: 42
                  attributes:
                    allOf:
                      - $ref: "#/components/schemas/FeedbackItem"
                      - type: object
                        properties:
                          id:
                            type: number
                            example: 42
                          created_at:
                            $ref: "#/components/schemas/createdAtParameter"

    # DAZN 1.0 Deployments
    Dazn1DeploymentsResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  type:
                    enum: ["deployments"]
                  attributes:
                    $ref: "#/components/schemas/Dazn1Deployment"
    Dazn1Deployment:
      type: object
      properties:
        deployedAt:
          type: string
          example: "1970-01-01T00:00:00.000Z"
        environment:
          $ref: "#/components/schemas/environmentIdDazn1Parameter"
        planId:
          $ref: "#/components/schemas/planIdDazn1Parameter"
        region:
          $ref: "#/components/schemas/environmentIdDazn1Parameter"
        target:
          $ref: "#/components/schemas/deployableTargetIdDazn1Parameter"
          example: "tizen"
        version:
          type: string
          description: app version to deploy
          example: "1.61.0"

    # DAZN 1.0 Plan
    Dazn1PlanItemBase:
      type: object
      properties:
        author:
          $ref: "#/components/schemas/authorParameter"
        dryRun:
          type: boolean
          example: true
          description: indicates that plan has been created for test purposes only and should not be applied
        environment:
          $ref: "#/components/schemas/environmentIdDazn1Parameter"
        isRollback:
          type: boolean
          example: false
          default: false
          description: indicates whether it is a rollback plan
        version:
          type: string
          description: app version to deploy
          example: "1.61.0"
    Dazn1PlanItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/Dazn1PlanItemBase"
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/planIdDazn1Parameter"
            createdAt:
              type: string
              example: "1970-01-01T00:00:00.000Z"
            status:
              $ref: "#/components/schemas/planStatusIdDazn1Parameter"
    Dazn1PlanRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              allOf:
                - $ref: "#/components/schemas/Dazn1PlanItemBase"
                - type: object
                  properties:
                    details:
                      $ref: "#/components/schemas/Dazn1PlanDetails"
              required:
                - author
                - details
                - dryRun
                - environment
                - version
    Dazn1PlansResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  type:
                    enum: ["plan"]
                  id:
                    $ref: "#/components/schemas/planIdDazn1Parameter"
                  attributes:
                    $ref: "#/components/schemas/Dazn1PlanItem"
    Dazn1PlanResponse:
      type: object
      properties:
        meta: {}
        data:
          allOf:
            - $ref: "#/components/schemas/JSONAPIResource"
            - type: object
              properties:
                type:
                  enum: ["plan"]
                id:
                  $ref: "#/components/schemas/planIdDazn1Parameter"
                attributes:
                  $ref: "#/components/schemas/Dazn1PlanItem"

    # DAZN 1.0 Plan Details
    Dazn1PlanRegionWithVersionOverride:
      type: object
      properties:
        region:
          $ref: "#/components/schemas/regionIdDazn1Parameter"
        version:
          type: string
          description: app version to deploy - this value overrides global version from Dazn1PlanItemBase
          example: "1.61.0"
      required:
        - region
        - verwsion
    Dazn1PlanDetail:
      type: object
      properties:
        regions:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/regionIdDazn1Parameter"
              - $ref: "#/components/schemas/Dazn1PlanRegionWithVersionOverride"
          example: ["at", "jp", { region: "us", version: "1.69.20" }]
        target:
          $ref: "#/components/schemas/deployableTargetIdDazn1Parameter"
      required:
        - regions
        - target
    Dazn1PlanDetails:
      type: array
      items:
        $ref: "#/components/schemas/Dazn1PlanDetail"
    Dazn1PlanDetailsResponse:
      type: object
      properties:
        meta: {}
        data:
          allOf:
            - $ref: "#/components/schemas/JSONAPIResource"
            - type: object
              properties:
                type:
                  enum: ["plan-details"]
                attributes:
                  type: object
                  properties:
                    details:
                      $ref: "#/components/schemas/Dazn1PlanDetails"
                    planId:
                      $ref: "#/components/schemas/planIdDazn1Parameter"

    # DAZN 1.0 Plan Rollback
    Dazn1PlanRollbackDetails:
      type: array
      items:
        type: object
        properties:
          regions:
            type: array
            items:
              $ref: "#/components/schemas/Dazn1PlanRegionWithVersionOverride"
            example:
              [
                { region: "us", version: "1.69.20" },
                { region: "de", version: "1.69.19" },
              ]
          target:
            $ref: "#/components/schemas/deployableTargetIdDazn1Parameter"
        required:
          - regions
          - target
    Dazn1PlanRollbackResponse:
      type: object
      properties:
        meta: {}
        data:
          allOf:
            - $ref: "#/components/schemas/JSONAPIResource"
            - type: object
              properties:
                type:
                  enum: ["deployment-plan-rollback"]
                attributes:
                  type: object
                  properties:
                    details:
                      $ref: "#/components/schemas/Dazn1PlanRollbackDetails"
                    planId:
                      $ref: "#/components/schemas/planIdDazn1Parameter"

    # DAZN 1.0 Plan Logs
    Dazn1PlanLogsResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  type:
                    enum: ["deployment-plan-log"]
                  attributes:
                    type: object
                    required:
                      - level
                      - message
                      - planId
                      - timestampMs
                      - ttl
                    properties:
                      details:
                        type: object
                        description: additional log message details
                      level:
                        type: string
                        description: log level
                        enum:
                          - debug
                          - error
                          - fatal
                          - info
                          - trace
                          - warn
                      message:
                        type: string
                        description: log message
                      planId:
                        $ref: "#/components/schemas/planIdDazn1Parameter"
                      timestampMs:
                        type: number
                        description: creation timestamp in ms
                        example: 1599570880046
                      ttl:
                        type: number
                        description: retention time for log message (timestamp in seconds)
                        example: 1599657279

    # DAZN 1.0 Packages
    Dazn1PackagesResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/JSONAPIMetaObject"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/JSONAPIResource"
              - type: object
                properties:
                  type:
                    enum: ["package"]
                  id:
                    example: "61abacfc-8a39-4f88-bca3-041a9aa9e7d6"
                  attributes:
                    $ref: "#/components/schemas/Dazn1Package"
    Dazn1PackageUrlResponse:
      type: object
      properties:
        meta: {}
        data:
          allOf:
            - $ref: "#/components/schemas/JSONAPIResource"
            - type: object
              properties:
                type:
                  enum: ["package-url"]
                id:
                  example: "61abacfc-8a39-4f88-bca3-041a9aa9e7d6"
                attributes:
                  $ref: "#/components/schemas/Dazn1PackageUrl"
    Dazn1Package:
      type: object
      properties:
        environment:
          $ref: "#/components/schemas/environmentIdDazn1Parameter"
        createdAt:
          type: string
          example: "1970-01-01T00:00:00.000Z"
        filename:
          type: string
          example: "webos-1080.ipk"
        id:
          type: string
          example: "61abacfc-8a39-4f88-bca3-041a9aa9e7d6"
        size:
          type: integer
          description: file size in bytes
          example: 6172
        target:
          $ref: "#/components/schemas/packageTargetIdDazn1Parameter"
        version:
          type: string
          description: app version to deploy
          example: "1.61.0"
    Dazn1PackageUrl:
      type: object
      properties:
        id:
          type: string
          example: "61abacfc-8a39-4f88-bca3-041a9aa9e7d6"
        url:
          type: string
          description: temporary url to download file

    PackageDeploymentItem:
      type: object
      additionalProperties: false
      properties:
        artifact_id:
          type: number
          example: 71
        author:
          $ref: "#/components/schemas/authorParameter"
        country_id:
          $ref: "#/components/schemas/countryIdParameter"
        environment_id:
          allOf:
            - $ref: "#/components/schemas/environmentIdParameter"
            - example: "production"
        originating_domain:
          $ref: "#/components/schemas/originatingDomainParameter"
        author_email:
          $ref: "#/components/schemas/authorEmail"
        target_id:
          $ref: "#/components/schemas/targetIdParameter"
        domain_id:
          $ref: "#/components/schemas/domainIdParameter"
      required:
        - artifact_id
        - author
        - country_id
        - domain_id
        - environment_id
        - originating_domain
        - target_id

    PostPackageDeploymentRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            attributes:
              $ref: "#/components/schemas/PackageDeploymentItem"
